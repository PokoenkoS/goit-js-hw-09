{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAWC,SAASC,cAAc,wBAClCC,EAAUF,SAASC,cAAc,uBACjCE,EAASH,SAASC,cAAc,sBAChCG,EAAMJ,SAASC,cAAc,UAEnC,IAAII,EAAW,EACfD,EAAIE,iBAAiB,SAErB,SAAyBC,GACvBA,EAAIC,iBACJ,IAAIC,EAAOC,OAAOP,EAAOQ,OACrBC,EAAQF,OAAOR,EAAQS,OACvBE,EAAQH,OAAOX,EAASY,OAE5B,MAAMG,EAAYC,aAAY,KAsBhC,IAAuBC,EAAUC,EArB/BZ,GAAW,EACXO,GAASH,EACTS,QAAQC,IAAId,GACZa,QAAQC,IAAIP,GAENP,GAAYQ,IACdO,cAAcN,GACdI,QAAQC,IAAI,UAcKH,EAXLX,EAWeY,EAXLL,EAYnB,IAAIS,SAAQ,CAACC,EAASC,KAE5B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACPH,GACJF,EAAQ,CAACM,SAAAZ,E,MAAUC,IAGnBM,EAAO,CAACK,SAAAZ,E,MAAUC,GAAO,GAEvBA,EAAM,KAtBwBY,MAAK,EAAED,SAAAE,EAAQb,MAAEA,KAClDc,EAAAlC,GAASmC,OAAOC,QAAS,uBAAqBH,QAAiBb,SAAYiB,OAC3E,EAAON,SAASO,EAAAlB,WAChBc,EAAAlC,GAAQmC,OAACI,QAAO,sBAAUD,QAA8BlB,SAEzDL,GAASH,CAAI,GACVG,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst amountEl = document.querySelector(`input[name=\"amount\"]`);\nconst delayEl = document.querySelector(`input[name=\"delay\"]`);\nconst stepEl = document.querySelector('input[name=\"step\"]');\nconst btn = document.querySelector(`button`);\n\nlet position = 0;\nbtn.addEventListener(`click`, onCreatePromise);\n\nfunction onCreatePromise(evt) {\n  evt.preventDefault();\n  let step = Number(stepEl.value);\n  let delay = Number(delayEl.value);\n  let amount= Number(amountEl.value);\n \n  const timeoutId = setInterval(() => {\n  position +=1;\n  delay += step;\n  console.log(position);\n  console.log(delay);\n  \n    if (position >= amount){\n      clearInterval(timeoutId)\n      console.log(`stop`);\n    }\n   \n    createPromise(position, delay).then(({position, delay}) => \n  Notiflix.Notify.success (`✅ Fulfilled promise ${position} in ${delay}ms`)\n).catch(({position, delay}) => \n  Notiflix.Notify.failure (`❌ Rejected promise ${position} in ${delay}ms`)\n )\n delay += step;\n  },delay)\n \n}\n\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n \n   const shouldResolve = Math.random() > 0.3;\n   setTimeout(() =>{\n   if (shouldResolve) {\n   resolve({position, delay});\n     \n   } \n   reject({position, delay})\n     \n   },delay)\n })\n }\n\n \n \n  \n\n\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$amountEl","document","querySelector","$47d4ff9957288465$var$delayEl","$47d4ff9957288465$var$stepEl","$47d4ff9957288465$var$btn","$47d4ff9957288465$var$position","addEventListener","evt","preventDefault","step","Number","value","delay1","amount","timeoutId","setInterval","position3","delay","console","log","clearInterval","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","position","then","position1","$parcel$interopDefault","Notify","success","catch","position2","failure"],"version":3,"file":"03-promises.5b298e45.js.map"}